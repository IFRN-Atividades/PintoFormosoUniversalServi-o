#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="2016Tii4ano")]
	public partial class BancoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCidade(Cidade instance);
    partial void UpdateCidade(Cidade instance);
    partial void DeleteCidade(Cidade instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertCompraItem(CompraItem instance);
    partial void UpdateCompraItem(CompraItem instance);
    partial void DeleteCompraItem(CompraItem instance);
    partial void InsertCompra(Compra instance);
    partial void UpdateCompra(Compra instance);
    partial void DeleteCompra(Compra instance);
    partial void InsertFuncionario(Funcionario instance);
    partial void UpdateFuncionario(Funcionario instance);
    partial void DeleteFuncionario(Funcionario instance);
    partial void InsertPagamento(Pagamento instance);
    partial void UpdatePagamento(Pagamento instance);
    partial void DeletePagamento(Pagamento instance);
    partial void InsertPessoa(Pessoa instance);
    partial void UpdatePessoa(Pessoa instance);
    partial void DeletePessoa(Pessoa instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertVenda(Venda instance);
    partial void UpdateVenda(Venda instance);
    partial void DeleteVenda(Venda instance);
    partial void InsertVendaItem(VendaItem instance);
    partial void UpdateVendaItem(VendaItem instance);
    partial void DeleteVendaItem(VendaItem instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public BancoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["_2016Tii4anoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BancoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BancoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BancoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BancoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cidade> Cidades
		{
			get
			{
				return this.GetTable<Cidade>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estados
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<CompraItem> CompraItems
		{
			get
			{
				return this.GetTable<CompraItem>();
			}
		}
		
		public System.Data.Linq.Table<Compra> Compras
		{
			get
			{
				return this.GetTable<Compra>();
			}
		}
		
		public System.Data.Linq.Table<Funcionario> Funcionarios
		{
			get
			{
				return this.GetTable<Funcionario>();
			}
		}
		
		public System.Data.Linq.Table<Pagamento> Pagamentos
		{
			get
			{
				return this.GetTable<Pagamento>();
			}
		}
		
		public System.Data.Linq.Table<Pessoa> Pessoas
		{
			get
			{
				return this.GetTable<Pessoa>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produtos
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<Venda> Vendas
		{
			get
			{
				return this.GetTable<Venda>();
			}
		}
		
		public System.Data.Linq.Table<VendaItem> VendaItems
		{
			get
			{
				return this.GetTable<VendaItem>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cidade")]
	public partial class Cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private System.Nullable<int> _IdEstado;
		
		private EntitySet<Pessoa> _Pessoas;
		
		private EntityRef<Estado> _Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnIdEstadoChanging(System.Nullable<int> value);
    partial void OnIdEstadoChanged();
    #endregion
		
		public Cidade()
		{
			this._Pessoas = new EntitySet<Pessoa>(new Action<Pessoa>(this.attach_Pessoas), new Action<Pessoa>(this.detach_Pessoas));
			this._Estado = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstado", DbType="Int")]
		public System.Nullable<int> IdEstado
		{
			get
			{
				return this._IdEstado;
			}
			set
			{
				if ((this._IdEstado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstadoChanging(value);
					this.SendPropertyChanging();
					this._IdEstado = value;
					this.SendPropertyChanged("IdEstado");
					this.OnIdEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Pessoa", Storage="_Pessoas", ThisKey="Id", OtherKey="IdCidade")]
		internal EntitySet<Pessoa> Pessoas
		{
			get
			{
				return this._Pessoas;
			}
			set
			{
				this._Pessoas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Cidade", Storage="_Estado", ThisKey="IdEstado", OtherKey="Id", IsForeignKey=true)]
		internal Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Cidades.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Cidades.Add(this);
						this._IdEstado = value.Id;
					}
					else
					{
						this._IdEstado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pessoas(Pessoa entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_Pessoas(Pessoa entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private string _Sigla;
		
		private EntitySet<Cidade> _Cidades;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnSiglaChanging(string value);
    partial void OnSiglaChanged();
    #endregion
		
		public Estado()
		{
			this._Cidades = new EntitySet<Cidade>(new Action<Cidade>(this.attach_Cidades), new Action<Cidade>(this.detach_Cidades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(250)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sigla", DbType="Char(2)")]
		public string Sigla
		{
			get
			{
				return this._Sigla;
			}
			set
			{
				if ((this._Sigla != value))
				{
					this.OnSiglaChanging(value);
					this.SendPropertyChanging();
					this._Sigla = value;
					this.SendPropertyChanged("Sigla");
					this.OnSiglaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Cidade", Storage="_Cidades", ThisKey="Id", OtherKey="IdEstado")]
		internal EntitySet<Cidade> Cidades
		{
			get
			{
				return this._Cidades;
			}
			set
			{
				this._Cidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompraItem")]
	public partial class CompraItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdCompra;
		
		private System.Nullable<int> _IdProduto;
		
		private System.Nullable<double> _Qtd;
		
		private System.Nullable<decimal> _PrecoCompra;
		
		private EntityRef<Compra> _Compra;
		
		private EntityRef<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdCompraChanging(System.Nullable<int> value);
    partial void OnIdCompraChanged();
    partial void OnIdProdutoChanging(System.Nullable<int> value);
    partial void OnIdProdutoChanged();
    partial void OnQtdChanging(System.Nullable<double> value);
    partial void OnQtdChanged();
    partial void OnPrecoCompraChanging(System.Nullable<decimal> value);
    partial void OnPrecoCompraChanged();
    #endregion
		
		public CompraItem()
		{
			this._Compra = default(EntityRef<Compra>);
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCompra", DbType="Int")]
		public System.Nullable<int> IdCompra
		{
			get
			{
				return this._IdCompra;
			}
			set
			{
				if ((this._IdCompra != value))
				{
					if (this._Compra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCompraChanging(value);
					this.SendPropertyChanging();
					this._IdCompra = value;
					this.SendPropertyChanged("IdCompra");
					this.OnIdCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduto", DbType="Int")]
		public System.Nullable<int> IdProduto
		{
			get
			{
				return this._IdProduto;
			}
			set
			{
				if ((this._IdProduto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProdutoChanging(value);
					this.SendPropertyChanging();
					this._IdProduto = value;
					this.SendPropertyChanged("IdProduto");
					this.OnIdProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qtd", DbType="Float")]
		public System.Nullable<double> Qtd
		{
			get
			{
				return this._Qtd;
			}
			set
			{
				if ((this._Qtd != value))
				{
					this.OnQtdChanging(value);
					this.SendPropertyChanging();
					this._Qtd = value;
					this.SendPropertyChanged("Qtd");
					this.OnQtdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecoCompra", DbType="Money")]
		public System.Nullable<decimal> PrecoCompra
		{
			get
			{
				return this._PrecoCompra;
			}
			set
			{
				if ((this._PrecoCompra != value))
				{
					this.OnPrecoCompraChanging(value);
					this.SendPropertyChanging();
					this._PrecoCompra = value;
					this.SendPropertyChanged("PrecoCompra");
					this.OnPrecoCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Compra_CompraItem", Storage="_Compra", ThisKey="IdCompra", OtherKey="Id", IsForeignKey=true)]
		internal Compra Compra
		{
			get
			{
				return this._Compra.Entity;
			}
			set
			{
				Compra previousValue = this._Compra.Entity;
				if (((previousValue != value) 
							|| (this._Compra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Compra.Entity = null;
						previousValue.CompraItems.Remove(this);
					}
					this._Compra.Entity = value;
					if ((value != null))
					{
						value.CompraItems.Add(this);
						this._IdCompra = value.Id;
					}
					else
					{
						this._IdCompra = default(Nullable<int>);
					}
					this.SendPropertyChanged("Compra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_CompraItem", Storage="_Produto", ThisKey="IdProduto", OtherKey="Id", IsForeignKey=true)]
		internal Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.CompraItems.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.CompraItems.Add(this);
						this._IdProduto = value.Id;
					}
					else
					{
						this._IdProduto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compra")]
	public partial class Compra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdFornecedor;
		
		private System.Nullable<System.DateTime> _Data;
		
		private System.Nullable<decimal> _TotalBruto;
		
		private System.Nullable<decimal> _Desconto;
		
		private System.Nullable<decimal> _TotalLiquido;
		
		private EntitySet<CompraItem> _CompraItems;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFornecedorChanging(System.Nullable<int> value);
    partial void OnIdFornecedorChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnTotalBrutoChanging(System.Nullable<decimal> value);
    partial void OnTotalBrutoChanged();
    partial void OnDescontoChanging(System.Nullable<decimal> value);
    partial void OnDescontoChanged();
    partial void OnTotalLiquidoChanging(System.Nullable<decimal> value);
    partial void OnTotalLiquidoChanged();
    #endregion
		
		public Compra()
		{
			this._CompraItems = new EntitySet<CompraItem>(new Action<CompraItem>(this.attach_CompraItems), new Action<CompraItem>(this.detach_CompraItems));
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFornecedor", DbType="Int")]
		public System.Nullable<int> IdFornecedor
		{
			get
			{
				return this._IdFornecedor;
			}
			set
			{
				if ((this._IdFornecedor != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFornecedorChanging(value);
					this.SendPropertyChanging();
					this._IdFornecedor = value;
					this.SendPropertyChanged("IdFornecedor");
					this.OnIdFornecedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBruto", DbType="Money")]
		public System.Nullable<decimal> TotalBruto
		{
			get
			{
				return this._TotalBruto;
			}
			set
			{
				if ((this._TotalBruto != value))
				{
					this.OnTotalBrutoChanging(value);
					this.SendPropertyChanging();
					this._TotalBruto = value;
					this.SendPropertyChanged("TotalBruto");
					this.OnTotalBrutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desconto", DbType="Money")]
		public System.Nullable<decimal> Desconto
		{
			get
			{
				return this._Desconto;
			}
			set
			{
				if ((this._Desconto != value))
				{
					this.OnDescontoChanging(value);
					this.SendPropertyChanging();
					this._Desconto = value;
					this.SendPropertyChanged("Desconto");
					this.OnDescontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLiquido", DbType="Money")]
		public System.Nullable<decimal> TotalLiquido
		{
			get
			{
				return this._TotalLiquido;
			}
			set
			{
				if ((this._TotalLiquido != value))
				{
					this.OnTotalLiquidoChanging(value);
					this.SendPropertyChanging();
					this._TotalLiquido = value;
					this.SendPropertyChanged("TotalLiquido");
					this.OnTotalLiquidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Compra_CompraItem", Storage="_CompraItems", ThisKey="Id", OtherKey="IdCompra")]
		internal EntitySet<CompraItem> CompraItems
		{
			get
			{
				return this._CompraItems;
			}
			set
			{
				this._CompraItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Compra", Storage="_Pessoa", ThisKey="IdFornecedor", OtherKey="Id", IsForeignKey=true)]
		internal Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Compras.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Compras.Add(this);
						this._IdFornecedor = value.Id;
					}
					else
					{
						this._IdFornecedor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompraItems(CompraItem entity)
		{
			this.SendPropertyChanging();
			entity.Compra = this;
		}
		
		private void detach_CompraItems(CompraItem entity)
		{
			this.SendPropertyChanging();
			entity.Compra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Funcionario")]
	public partial class Funcionario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Identidade;
		
		private string _CarteiraTrabalho;
		
		private System.Nullable<decimal> _Salario;
		
		private System.Nullable<bool> _Motorista;
		
		private System.Nullable<bool> _Tecnico;
		
		private string _Observacao;
		
		private EntitySet<Pagamento> _Pagamentos;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdentidadeChanging(string value);
    partial void OnIdentidadeChanged();
    partial void OnCarteiraTrabalhoChanging(string value);
    partial void OnCarteiraTrabalhoChanged();
    partial void OnSalarioChanging(System.Nullable<decimal> value);
    partial void OnSalarioChanged();
    partial void OnMotoristaChanging(System.Nullable<bool> value);
    partial void OnMotoristaChanged();
    partial void OnTecnicoChanging(System.Nullable<bool> value);
    partial void OnTecnicoChanged();
    partial void OnObservacaoChanging(string value);
    partial void OnObservacaoChanged();
    #endregion
		
		public Funcionario()
		{
			this._Pagamentos = new EntitySet<Pagamento>(new Action<Pagamento>(this.attach_Pagamentos), new Action<Pagamento>(this.detach_Pagamentos));
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identidade", DbType="VarChar(50)")]
		public string Identidade
		{
			get
			{
				return this._Identidade;
			}
			set
			{
				if ((this._Identidade != value))
				{
					this.OnIdentidadeChanging(value);
					this.SendPropertyChanging();
					this._Identidade = value;
					this.SendPropertyChanged("Identidade");
					this.OnIdentidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarteiraTrabalho", DbType="VarChar(50)")]
		public string CarteiraTrabalho
		{
			get
			{
				return this._CarteiraTrabalho;
			}
			set
			{
				if ((this._CarteiraTrabalho != value))
				{
					this.OnCarteiraTrabalhoChanging(value);
					this.SendPropertyChanging();
					this._CarteiraTrabalho = value;
					this.SendPropertyChanged("CarteiraTrabalho");
					this.OnCarteiraTrabalhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salario", DbType="Money")]
		public System.Nullable<decimal> Salario
		{
			get
			{
				return this._Salario;
			}
			set
			{
				if ((this._Salario != value))
				{
					this.OnSalarioChanging(value);
					this.SendPropertyChanging();
					this._Salario = value;
					this.SendPropertyChanged("Salario");
					this.OnSalarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motorista", DbType="Bit")]
		public System.Nullable<bool> Motorista
		{
			get
			{
				return this._Motorista;
			}
			set
			{
				if ((this._Motorista != value))
				{
					this.OnMotoristaChanging(value);
					this.SendPropertyChanging();
					this._Motorista = value;
					this.SendPropertyChanged("Motorista");
					this.OnMotoristaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tecnico", DbType="Bit")]
		public System.Nullable<bool> Tecnico
		{
			get
			{
				return this._Tecnico;
			}
			set
			{
				if ((this._Tecnico != value))
				{
					this.OnTecnicoChanging(value);
					this.SendPropertyChanging();
					this._Tecnico = value;
					this.SendPropertyChanged("Tecnico");
					this.OnTecnicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacao", DbType="VarChar(100)")]
		public string Observacao
		{
			get
			{
				return this._Observacao;
			}
			set
			{
				if ((this._Observacao != value))
				{
					this.OnObservacaoChanging(value);
					this.SendPropertyChanging();
					this._Observacao = value;
					this.SendPropertyChanged("Observacao");
					this.OnObservacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcionario_Pagamento", Storage="_Pagamentos", ThisKey="Id", OtherKey="IdFuncionario")]
		internal EntitySet<Pagamento> Pagamentos
		{
			get
			{
				return this._Pagamentos;
			}
			set
			{
				this._Pagamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcionario_Pessoa", Storage="_Pessoa", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		internal Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Funcionario = null;
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Funcionario = this;
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pagamentos(Pagamento entity)
		{
			this.SendPropertyChanging();
			entity.Funcionario = this;
		}
		
		private void detach_Pagamentos(Pagamento entity)
		{
			this.SendPropertyChanging();
			entity.Funcionario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pagamento")]
	public partial class Pagamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdFuncionario;
		
		private System.Nullable<int> _ReferenciaMes;
		
		private System.Nullable<int> _ReferenciaAno;
		
		private System.Nullable<System.DateTime> _Data;
		
		private System.Nullable<decimal> _Valor;
		
		private EntityRef<Funcionario> _Funcionario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFuncionarioChanging(System.Nullable<int> value);
    partial void OnIdFuncionarioChanged();
    partial void OnReferenciaMesChanging(System.Nullable<int> value);
    partial void OnReferenciaMesChanged();
    partial void OnReferenciaAnoChanging(System.Nullable<int> value);
    partial void OnReferenciaAnoChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnValorChanging(System.Nullable<decimal> value);
    partial void OnValorChanged();
    #endregion
		
		public Pagamento()
		{
			this._Funcionario = default(EntityRef<Funcionario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFuncionario", DbType="Int")]
		public System.Nullable<int> IdFuncionario
		{
			get
			{
				return this._IdFuncionario;
			}
			set
			{
				if ((this._IdFuncionario != value))
				{
					if (this._Funcionario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFuncionarioChanging(value);
					this.SendPropertyChanging();
					this._IdFuncionario = value;
					this.SendPropertyChanged("IdFuncionario");
					this.OnIdFuncionarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenciaMes", DbType="Int")]
		public System.Nullable<int> ReferenciaMes
		{
			get
			{
				return this._ReferenciaMes;
			}
			set
			{
				if ((this._ReferenciaMes != value))
				{
					this.OnReferenciaMesChanging(value);
					this.SendPropertyChanging();
					this._ReferenciaMes = value;
					this.SendPropertyChanged("ReferenciaMes");
					this.OnReferenciaMesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenciaAno", DbType="Int")]
		public System.Nullable<int> ReferenciaAno
		{
			get
			{
				return this._ReferenciaAno;
			}
			set
			{
				if ((this._ReferenciaAno != value))
				{
					this.OnReferenciaAnoChanging(value);
					this.SendPropertyChanging();
					this._ReferenciaAno = value;
					this.SendPropertyChanged("ReferenciaAno");
					this.OnReferenciaAnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Money")]
		public System.Nullable<decimal> Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcionario_Pagamento", Storage="_Funcionario", ThisKey="IdFuncionario", OtherKey="Id", IsForeignKey=true)]
		internal Funcionario Funcionario
		{
			get
			{
				return this._Funcionario.Entity;
			}
			set
			{
				Funcionario previousValue = this._Funcionario.Entity;
				if (((previousValue != value) 
							|| (this._Funcionario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Funcionario.Entity = null;
						previousValue.Pagamentos.Remove(this);
					}
					this._Funcionario.Entity = value;
					if ((value != null))
					{
						value.Pagamentos.Add(this);
						this._IdFuncionario = value.Id;
					}
					else
					{
						this._IdFuncionario = default(Nullable<int>);
					}
					this.SendPropertyChanged("Funcionario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pessoa")]
	public partial class Pessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Tipo;
		
		private string _Nome;
		
		private string _Fone;
		
		private string _Email;
		
		private string _CPF;
		
		private string _CNPJ;
		
		private System.Nullable<int> _IdCidade;
		
		private EntitySet<Compra> _Compras;
		
		private EntitySet<Venda> _Vendas;
		
		private EntityRef<Cidade> _Cidade;
		
		private EntityRef<Funcionario> _Funcionario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTipoChanging(System.Nullable<int> value);
    partial void OnTipoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnFoneChanging(string value);
    partial void OnFoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCPFChanging(string value);
    partial void OnCPFChanged();
    partial void OnCNPJChanging(string value);
    partial void OnCNPJChanged();
    partial void OnIdCidadeChanging(System.Nullable<int> value);
    partial void OnIdCidadeChanged();
    #endregion
		
		public Pessoa()
		{
			this._Compras = new EntitySet<Compra>(new Action<Compra>(this.attach_Compras), new Action<Compra>(this.detach_Compras));
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			this._Cidade = default(EntityRef<Cidade>);
			this._Funcionario = default(EntityRef<Funcionario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Funcionario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Int")]
		public System.Nullable<int> Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fone", DbType="VarChar(50)")]
		public string Fone
		{
			get
			{
				return this._Fone;
			}
			set
			{
				if ((this._Fone != value))
				{
					this.OnFoneChanging(value);
					this.SendPropertyChanging();
					this._Fone = value;
					this.SendPropertyChanged("Fone");
					this.OnFoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF", DbType="VarChar(50)")]
		public string CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this.OnCPFChanging(value);
					this.SendPropertyChanging();
					this._CPF = value;
					this.SendPropertyChanged("CPF");
					this.OnCPFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPJ", DbType="VarChar(50)")]
		public string CNPJ
		{
			get
			{
				return this._CNPJ;
			}
			set
			{
				if ((this._CNPJ != value))
				{
					this.OnCNPJChanging(value);
					this.SendPropertyChanging();
					this._CNPJ = value;
					this.SendPropertyChanged("CNPJ");
					this.OnCNPJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", DbType="Int")]
		public System.Nullable<int> IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCidadeChanging(value);
					this.SendPropertyChanging();
					this._IdCidade = value;
					this.SendPropertyChanged("IdCidade");
					this.OnIdCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Compra", Storage="_Compras", ThisKey="Id", OtherKey="IdFornecedor")]
		internal EntitySet<Compra> Compras
		{
			get
			{
				return this._Compras;
			}
			set
			{
				this._Compras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Venda", Storage="_Vendas", ThisKey="Id", OtherKey="IdCliente")]
		internal EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Pessoa", Storage="_Cidade", ThisKey="IdCidade", OtherKey="Id", IsForeignKey=true)]
		internal Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.Pessoas.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.Pessoas.Add(this);
						this._IdCidade = value.Id;
					}
					else
					{
						this._IdCidade = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcionario_Pessoa", Storage="_Funcionario", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		internal Funcionario Funcionario
		{
			get
			{
				return this._Funcionario.Entity;
			}
			set
			{
				Funcionario previousValue = this._Funcionario.Entity;
				if (((previousValue != value) 
							|| (this._Funcionario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Funcionario.Entity = null;
						previousValue.Pessoa = null;
					}
					this._Funcionario.Entity = value;
					if ((value != null))
					{
						value.Pessoa = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Funcionario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descricao;
		
		private string _Unidade;
		
		private System.Nullable<decimal> _PrecoCompra;
		
		private System.Nullable<decimal> _PrecoVenda;
		
		private System.Nullable<double> _Estoque;
		
		private EntitySet<CompraItem> _CompraItems;
		
		private EntitySet<VendaItem> _VendaItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnUnidadeChanging(string value);
    partial void OnUnidadeChanged();
    partial void OnPrecoCompraChanging(System.Nullable<decimal> value);
    partial void OnPrecoCompraChanged();
    partial void OnPrecoVendaChanging(System.Nullable<decimal> value);
    partial void OnPrecoVendaChanged();
    partial void OnEstoqueChanging(System.Nullable<double> value);
    partial void OnEstoqueChanged();
    #endregion
		
		public Produto()
		{
			this._CompraItems = new EntitySet<CompraItem>(new Action<CompraItem>(this.attach_CompraItems), new Action<CompraItem>(this.detach_CompraItems));
			this._VendaItems = new EntitySet<VendaItem>(new Action<VendaItem>(this.attach_VendaItems), new Action<VendaItem>(this.detach_VendaItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(100)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unidade", DbType="VarChar(50)")]
		public string Unidade
		{
			get
			{
				return this._Unidade;
			}
			set
			{
				if ((this._Unidade != value))
				{
					this.OnUnidadeChanging(value);
					this.SendPropertyChanging();
					this._Unidade = value;
					this.SendPropertyChanged("Unidade");
					this.OnUnidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecoCompra", DbType="Money")]
		public System.Nullable<decimal> PrecoCompra
		{
			get
			{
				return this._PrecoCompra;
			}
			set
			{
				if ((this._PrecoCompra != value))
				{
					this.OnPrecoCompraChanging(value);
					this.SendPropertyChanging();
					this._PrecoCompra = value;
					this.SendPropertyChanged("PrecoCompra");
					this.OnPrecoCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecoVenda", DbType="Money")]
		public System.Nullable<decimal> PrecoVenda
		{
			get
			{
				return this._PrecoVenda;
			}
			set
			{
				if ((this._PrecoVenda != value))
				{
					this.OnPrecoVendaChanging(value);
					this.SendPropertyChanging();
					this._PrecoVenda = value;
					this.SendPropertyChanged("PrecoVenda");
					this.OnPrecoVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estoque", DbType="Float")]
		public System.Nullable<double> Estoque
		{
			get
			{
				return this._Estoque;
			}
			set
			{
				if ((this._Estoque != value))
				{
					this.OnEstoqueChanging(value);
					this.SendPropertyChanging();
					this._Estoque = value;
					this.SendPropertyChanged("Estoque");
					this.OnEstoqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_CompraItem", Storage="_CompraItems", ThisKey="Id", OtherKey="IdProduto")]
		internal EntitySet<CompraItem> CompraItems
		{
			get
			{
				return this._CompraItems;
			}
			set
			{
				this._CompraItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_VendaItem", Storage="_VendaItems", ThisKey="Id", OtherKey="IdProduto")]
		internal EntitySet<VendaItem> VendaItems
		{
			get
			{
				return this._VendaItems;
			}
			set
			{
				this._VendaItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompraItems(CompraItem entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_CompraItems(CompraItem entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
		
		private void attach_VendaItems(VendaItem entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_VendaItems(VendaItem entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venda")]
	public partial class Venda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdCliente;
		
		private System.Nullable<System.DateTime> _Data;
		
		private System.Nullable<decimal> _TotalBruto;
		
		private System.Nullable<decimal> _Desconto;
		
		private System.Nullable<decimal> _TotalLiquido;
		
		private EntitySet<VendaItem> _VendaItems;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdClienteChanging(System.Nullable<int> value);
    partial void OnIdClienteChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnTotalBrutoChanging(System.Nullable<decimal> value);
    partial void OnTotalBrutoChanged();
    partial void OnDescontoChanging(System.Nullable<decimal> value);
    partial void OnDescontoChanged();
    partial void OnTotalLiquidoChanging(System.Nullable<decimal> value);
    partial void OnTotalLiquidoChanged();
    #endregion
		
		public Venda()
		{
			this._VendaItems = new EntitySet<VendaItem>(new Action<VendaItem>(this.attach_VendaItems), new Action<VendaItem>(this.detach_VendaItems));
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int")]
		public System.Nullable<int> IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBruto", DbType="Money")]
		public System.Nullable<decimal> TotalBruto
		{
			get
			{
				return this._TotalBruto;
			}
			set
			{
				if ((this._TotalBruto != value))
				{
					this.OnTotalBrutoChanging(value);
					this.SendPropertyChanging();
					this._TotalBruto = value;
					this.SendPropertyChanged("TotalBruto");
					this.OnTotalBrutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desconto", DbType="Money")]
		public System.Nullable<decimal> Desconto
		{
			get
			{
				return this._Desconto;
			}
			set
			{
				if ((this._Desconto != value))
				{
					this.OnDescontoChanging(value);
					this.SendPropertyChanging();
					this._Desconto = value;
					this.SendPropertyChanged("Desconto");
					this.OnDescontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLiquido", DbType="Money")]
		public System.Nullable<decimal> TotalLiquido
		{
			get
			{
				return this._TotalLiquido;
			}
			set
			{
				if ((this._TotalLiquido != value))
				{
					this.OnTotalLiquidoChanging(value);
					this.SendPropertyChanging();
					this._TotalLiquido = value;
					this.SendPropertyChanged("TotalLiquido");
					this.OnTotalLiquidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_VendaItem", Storage="_VendaItems", ThisKey="Id", OtherKey="IdVenda")]
		internal EntitySet<VendaItem> VendaItems
		{
			get
			{
				return this._VendaItems;
			}
			set
			{
				this._VendaItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Venda", Storage="_Pessoa", ThisKey="IdCliente", OtherKey="Id", IsForeignKey=true)]
		internal Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdCliente = value.Id;
					}
					else
					{
						this._IdCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VendaItems(VendaItem entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_VendaItems(VendaItem entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendaItem")]
	public partial class VendaItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdVenda;
		
		private System.Nullable<int> _IdProduto;
		
		private System.Nullable<double> _Qtd;
		
		private System.Nullable<decimal> _PrecoVenda;
		
		private EntityRef<Produto> _Produto;
		
		private EntityRef<Venda> _Venda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdVendaChanging(System.Nullable<int> value);
    partial void OnIdVendaChanged();
    partial void OnIdProdutoChanging(System.Nullable<int> value);
    partial void OnIdProdutoChanged();
    partial void OnQtdChanging(System.Nullable<double> value);
    partial void OnQtdChanged();
    partial void OnPrecoVendaChanging(System.Nullable<decimal> value);
    partial void OnPrecoVendaChanged();
    #endregion
		
		public VendaItem()
		{
			this._Produto = default(EntityRef<Produto>);
			this._Venda = default(EntityRef<Venda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVenda", DbType="Int")]
		public System.Nullable<int> IdVenda
		{
			get
			{
				return this._IdVenda;
			}
			set
			{
				if ((this._IdVenda != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVendaChanging(value);
					this.SendPropertyChanging();
					this._IdVenda = value;
					this.SendPropertyChanged("IdVenda");
					this.OnIdVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduto", DbType="Int")]
		public System.Nullable<int> IdProduto
		{
			get
			{
				return this._IdProduto;
			}
			set
			{
				if ((this._IdProduto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProdutoChanging(value);
					this.SendPropertyChanging();
					this._IdProduto = value;
					this.SendPropertyChanged("IdProduto");
					this.OnIdProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qtd", DbType="Float")]
		public System.Nullable<double> Qtd
		{
			get
			{
				return this._Qtd;
			}
			set
			{
				if ((this._Qtd != value))
				{
					this.OnQtdChanging(value);
					this.SendPropertyChanging();
					this._Qtd = value;
					this.SendPropertyChanged("Qtd");
					this.OnQtdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecoVenda", DbType="Money")]
		public System.Nullable<decimal> PrecoVenda
		{
			get
			{
				return this._PrecoVenda;
			}
			set
			{
				if ((this._PrecoVenda != value))
				{
					this.OnPrecoVendaChanging(value);
					this.SendPropertyChanging();
					this._PrecoVenda = value;
					this.SendPropertyChanged("PrecoVenda");
					this.OnPrecoVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_VendaItem", Storage="_Produto", ThisKey="IdProduto", OtherKey="Id", IsForeignKey=true)]
		internal Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.VendaItems.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.VendaItems.Add(this);
						this._IdProduto = value.Id;
					}
					else
					{
						this._IdProduto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_VendaItem", Storage="_Venda", ThisKey="IdVenda", OtherKey="Id", IsForeignKey=true)]
		internal Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.VendaItems.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.VendaItems.Add(this);
						this._IdVenda = value.Id;
					}
					else
					{
						this._IdVenda = default(Nullable<int>);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private string _Senha;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnSenhaChanging(string value);
    partial void OnSenhaChanged();
    #endregion
		
		public Usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(50)")]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this.OnSenhaChanging(value);
					this.SendPropertyChanging();
					this._Senha = value;
					this.SendPropertyChanged("Senha");
					this.OnSenhaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
